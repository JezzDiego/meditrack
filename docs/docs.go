// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Meditrack Team",
            "url": "localhost:3333"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/ncm": {
            "get": {
                "description": "Retorna todos os NCMs cadastrados.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nomenclatura Comum do Mercosul"
                ],
                "operationId": "GetAllNCM",
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/model.NCM"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo NCM.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nomenclatura Comum do Mercosul"
                ],
                "operationId": "CreateNCM",
                "parameters": [
                    {
                        "description": "NCM a ser criado",
                        "name": "ncm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NCM"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/model.NCM"
                        }
                    },
                    "400": {
                        "description": "Requisição inválida.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/ncm/{code}": {
            "get": {
                "description": "Retorna um NCM com base no código informado.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nomenclatura Comum do Mercosul"
                ],
                "operationId": "GetNCMByCode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Código do NCM",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/model.NCM"
                        }
                    },
                    "404": {
                        "description": "NCM não encontrado.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/product": {
            "get": {
                "description": "Retorna todos os itens cadastrados.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Produtos"
                ],
                "operationId": "GetAllProducts",
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/model.FullProduct"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo item.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Produtos"
                ],
                "operationId": "CreateProduct",
                "parameters": [
                    {
                        "description": "Item a ser criado.",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FullProduct"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Item criado com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/model.FullProduct"
                        }
                    },
                    "400": {
                        "description": "Requisição inválida.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/product/gtin/{gtin}": {
            "get": {
                "description": "Retorna um item com base no GTIN informado.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Produtos"
                ],
                "operationId": "GetProductByGtin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GTIN do item",
                        "name": "gtin",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/model.FullProduct"
                        }
                    },
                    "404": {
                        "description": "Item não encontrado.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/product/{id}": {
            "get": {
                "description": "Retorna um item com base no ID informado.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Produtos"
                ],
                "operationId": "GetProductById",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/model.FullProduct"
                        }
                    },
                    "404": {
                        "description": "Item não encontrado.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.FullProduct": {
            "type": "object",
            "properties": {
                "avg_price": {
                    "type": "number"
                },
                "barcode_image": {
                    "type": "string"
                },
                "brand_name": {
                    "type": "string"
                },
                "brand_picture": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gross_weight": {
                    "type": "number"
                },
                "gtin": {
                    "type": "integer"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "max_price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "ncm": {
                    "$ref": "#/definitions/model.NCM"
                },
                "ncm_code": {
                    "type": "string"
                },
                "net_weight": {
                    "type": "number"
                },
                "origin": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "model.NCM": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ex": {
                    "type": "string"
                },
                "full_description": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Meditrack API",
	Description:      "API para consulta de itens por codigo de barras.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
