// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Meditrack Team"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/medicine": {
            "get": {
                "description": "Retorna todos os itens.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "operationId": "GetAllMedicines",
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/entities.FullMedicine"
                        }
                    },
                    "404": {
                        "description": "Item não encontrado.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/medicine/gtin/{gtin}": {
            "get": {
                "description": "Retorna um item com base no gtin informado.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "operationId": "GetMedicineByGtin",
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/entities.FullMedicine"
                        }
                    },
                    "404": {
                        "description": "Item não encontrado.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/medicine/{id}": {
            "get": {
                "description": "Retorna um item com base no id informado.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "operationId": "GetMedicineById",
                "responses": {
                    "200": {
                        "description": "Requisição bem sucedida.",
                        "schema": {
                            "$ref": "#/definitions/entities.FullMedicine"
                        }
                    },
                    "404": {
                        "description": "Item não encontrado.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.FullMedicine": {
            "type": "object",
            "properties": {
                "avg_price": {
                    "type": "number"
                },
                "barcode_image": {
                    "type": "string"
                },
                "brand_name": {
                    "type": "string"
                },
                "brand_picture": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gross_weight": {
                    "type": "number"
                },
                "gtin": {
                    "type": "integer"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "max_price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "ncm": {
                    "$ref": "#/definitions/entities.NCM"
                },
                "ncm_code": {
                    "type": "string"
                },
                "net_weight": {
                    "type": "number"
                },
                "origin": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "entities.NCM": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "ex": {
                    "type": "string"
                },
                "full_description": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Meditrack API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
